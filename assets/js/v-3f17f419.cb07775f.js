(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[8781],{8084:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-3f17f419",path:"/Books/Swifter-SwiftTips.html",title:"Swifter Swift必备Tips",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. 柯里化",slug:"_1-柯里化",children:[]},{level:2,title:"2. Sequence for-in迭代",slug:"_2-sequence-for-in迭代",children:[]},{level:2,title:"3. 元组多返回值",slug:"_3-元组多返回值",children:[]},{level:2,title:"4. @autoclosure 自动闭包",slug:"_4-autoclosure-自动闭包",children:[]},{level:2,title:"4. @escaping 逃逸闭包",slug:"_4-escaping-逃逸闭包",children:[]},{level:2,title:"5. 操作符重载",slug:"_5-操作符重载",children:[]},{level:2,title:"6. 函数参数传递",slug:"_6-函数参数传递",children:[{level:3,title:"值类型参数",slug:"值类型参数",children:[]},{level:3,title:"引用类型参数",slug:"引用类型参数",children:[]}]},{level:2,title:"7. 字面量表达协议",slug:"_7-字面量表达协议",children:[]},{level:2,title:"8. subscript 下标访问",slug:"_8-subscript-下标访问",children:[]},{level:2,title:"9. typealias 类型别名",slug:"_9-typealias-类型别名",children:[]},{level:2,title:"10. associatedType 相关类型",slug:"_10-associatedtype-相关类型",children:[]},{level:2,title:"11. 可变参数",slug:"_11-可变参数",children:[]},{level:2,title:"12. 初始化顺序",slug:"_12-初始化顺序",children:[]},{level:2,title:"13. 可空初始化",slug:"_13-可空初始化",children:[]},{level:2,title:"14. 函数默认参数",slug:"_14-函数默认参数",children:[]},{level:2,title:"15. ... ..< 区间操作符",slug:"_15-区间操作符",children:[]},{level:2,title:"16. 元类型",slug:"_16-元类型",children:[]},{level:2,title:"17. 深拷贝",slug:"_17-深拷贝",children:[]},{level:2,title:"18. 属性观察",slug:"_18-属性观察",children:[]},{level:2,title:"19. lazy 懒加载",slug:"_19-lazy-懒加载",children:[]},{level:2,title:"20. 懒实现序列",slug:"_20-懒实现序列",children:[]},{level:2,title:"21. Optional Map",slug:"_21-optional-map",children:[]},{level:2,title:"22. where 模式匹配",slug:"_22-where-模式匹配",children:[]},{level:2,title:"23. indirect 嵌套enum",slug:"_23-indirect-嵌套enum",children:[]},{level:2,title:"24. 实例方法的其它调用方式",slug:"_24-实例方法的其它调用方式",children:[]},{level:2,title:"25. 单例模式",slug:"_25-单例模式",children:[]},{level:2,title:"26. 条件编译",slug:"_26-条件编译",children:[]},{level:2,title:"27. 注释标记",slug:"_27-注释标记",children:[]},{level:2,title:"28. 可选协议",slug:"_28-可选协议",children:[]},{level:2,title:"29. 判断实例类型",slug:"_29-判断实例类型",children:[]},{level:2,title:"30. == === 判断相等",slug:"_30-判断相等",children:[]},{level:2,title:"31. 格式化字符串",slug:"_31-格式化字符串",children:[]},{level:2,title:"32. OptionSet 操作集合",slug:"_32-optionset-操作集合",children:[]},{level:2,title:"33. enumerate 数组列举",slug:"_33-enumerate-数组列举",children:[]},{level:2,title:"34. Associated Object扩展存储属性",slug:"_34-associated-object扩展存储属性",children:[]},{level:2,title:"35. Lock 锁",slug:"_35-lock-锁",children:[]},{level:2,title:"36. 编译符号",slug:"_36-编译符号",children:[]},{level:2,title:"37. 溢出操作符",slug:"_37-溢出操作符",children:[]},{level:2,title:"38. 属性访问控制",slug:"_38-属性访问控制",children:[]},{level:2,title:"39. Swift解释执行",slug:"_39-swift解释执行",children:[]},{level:2,title:"40. swiftc编译",slug:"_40-swiftc编译",children:[]},{level:2,title:"41. 自定义打印输出",slug:"_41-自定义打印输出",children:[]},{level:2,title:"42. 断言",slug:"_42-断言",children:[]},{level:2,title:"43. 错误退出",slug:"_43-错误退出",children:[]},{level:2,title:"44. 指针操作",slug:"_44-指针操作",children:[]},{level:2,title:"45. 条件协议扩展",slug:"_45-条件协议扩展",children:[]}],filePathRelative:"Books/Swifter-SwiftTips.md",git:{updatedTime:1642523838e3,contributors:[]}}},7735:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="swifter-swift必备tips" tabindex="-1"><a class="header-anchor" href="#swifter-swift必备tips" aria-hidden="true">#</a> Swifter Swift必备Tips</h1><h2 id="_1-柯里化" tabindex="-1"><a class="header-anchor" href="#_1-柯里化" aria-hidden="true">#</a> 1. 柯里化</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">addTo</span><span class="token punctuation">(</span><span class="token number">_</span> adder<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> num <span class="token keyword">in</span>\n        adder <span class="token operator">+</span> num\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> addToOne <span class="token operator">=</span> <span class="token function">addTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> addToTwo <span class="token operator">=</span> <span class="token function">addTo</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">addToOne</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 11</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">addToTwo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_2-sequence-for-in迭代" tabindex="-1"><a class="header-anchor" href="#_2-sequence-for-in迭代" aria-hidden="true">#</a> 2. Sequence for-in迭代</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">IntArray</span><span class="token punctuation">:</span> <span class="token builtin">Sequence</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span>\n    \n    <span class="token keyword">func</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">IntArrayIterator</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">IntArrayIterator</span><span class="token punctuation">(</span>array<span class="token punctuation">:</span> array<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">struct</span> <span class="token builtin">IntArrayIterator</span><span class="token punctuation">:</span> <span class="token builtin">IteratorProtocol</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span>\n    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>\n    \n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span><span class="token operator">?</span> <span class="token punctuation">{</span>\n        <span class="token keyword">guard</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span><span class="token builtin">count</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token constant">nil</span> <span class="token punctuation">}</span>\n        <span class="token keyword">defer</span> <span class="token punctuation">{</span>\n            index <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token function">IntArray</span><span class="token punctuation">(</span>array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> item <span class="token keyword">in</span> array <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_3-元组多返回值" tabindex="-1"><a class="header-anchor" href="#_3-元组多返回值" aria-hidden="true">#</a> 3. 元组多返回值</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span>R<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> G<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> B<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// (R: 255, G: 255, B: 255)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_4-autoclosure-自动闭包" tabindex="-1"><a class="header-anchor" href="#_4-autoclosure-自动闭包" aria-hidden="true">#</a> 4. @autoclosure 自动闭包</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">closure</span><span class="token punctuation">(</span><span class="token number">_</span> number<span class="token punctuation">:</span> @autoclosure <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> number\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">closure</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_4-escaping-逃逸闭包" tabindex="-1"><a class="header-anchor" href="#_4-escaping-逃逸闭包" aria-hidden="true">#</a> 4. @escaping 逃逸闭包</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Dispatch</span>\n\n<span class="token keyword">func</span> <span class="token function">asyncAfter</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> execute<span class="token punctuation">:</span> @escaping <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">asyncAfter</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;3秒后执行&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_5-操作符重载" tabindex="-1"><a class="header-anchor" href="#_5-操作符重载" aria-hidden="true">#</a> 5. 操作符重载</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">ValueInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">+</span><span class="token punctuation">(</span><span class="token keyword">left</span><span class="token punctuation">:</span> <span class="token builtin">ValueInt</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">:</span> <span class="token builtin">ValueInt</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token keyword">left</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token keyword">right</span><span class="token punctuation">.</span>value\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">ValueInt</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">ValueInt</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment">// 4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_6-函数参数传递" tabindex="-1"><a class="header-anchor" href="#_6-函数参数传递" aria-hidden="true">#</a> 6. 函数参数传递</h2><ul><li><h3 id="值类型参数" tabindex="-1"><a class="header-anchor" href="#值类型参数" aria-hidden="true">#</a> 值类型参数</h3><h4 id="不更改原值" tabindex="-1"><a class="header-anchor" href="#不更改原值" aria-hidden="true">#</a> 不更改原值</h4><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">increased</span><span class="token punctuation">(</span><span class="token number">_</span> variable<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> variable <span class="token operator">=</span> variable\n    variable <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token keyword">return</span> variable\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">increased</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="更改原值" tabindex="-1"><a class="header-anchor" href="#更改原值" aria-hidden="true">#</a> 更改原值</h4><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token number">_</span> variable<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    variable <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> variable <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token function">increase</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>variable<span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>variable<span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><h3 id="引用类型参数" tabindex="-1"><a class="header-anchor" href="#引用类型参数" aria-hidden="true">#</a> 引用类型参数</h3><h4 id="不更改原值-1" tabindex="-1"><a class="header-anchor" href="#不更改原值-1" aria-hidden="true">#</a> 不更改原值</h4><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">ReferenceInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">increased</span><span class="token punctuation">(</span><span class="token number">_</span> variable<span class="token punctuation">:</span> <span class="token builtin">ReferenceInt</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">ReferenceInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> variable <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span>variable<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n    variable<span class="token punctuation">.</span>value <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token keyword">return</span> variable\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> variable <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">increased</span><span class="token punctuation">(</span>variable<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span>\n<span class="token function">print</span><span class="token punctuation">(</span>variable<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="更改原值-1" tabindex="-1"><a class="header-anchor" href="#更改原值-1" aria-hidden="true">#</a> 更改原值</h4><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token number">_</span> variable<span class="token punctuation">:</span> <span class="token builtin">ReferenceInt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    variable<span class="token punctuation">.</span>value <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">let</span> variable <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token function">increase</span><span class="token punctuation">(</span>variable<span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>variable<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h2 id="_7-字面量表达协议" tabindex="-1"><a class="header-anchor" href="#_7-字面量表达协议" aria-hidden="true">#</a> 7. 字面量表达协议</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">ValueInt</span><span class="token punctuation">:</span> <span class="token builtin">ExpressibleByIntegerLiteral</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">init</span><span class="token punctuation">(</span>integerLiteral value<span class="token punctuation">:</span> <span class="token builtin">IntegerLiteralType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> variable<span class="token punctuation">:</span> <span class="token builtin">ValueInt</span> <span class="token operator">=</span> <span class="token number">3</span>\n<span class="token function">print</span><span class="token punctuation">(</span>variable<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_8-subscript-下标访问" tabindex="-1"><a class="header-anchor" href="#_8-subscript-下标访问" aria-hidden="true">#</a> 8. subscript 下标访问</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">IntArray</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span>\n\n    <span class="token keyword">subscript</span><span class="token punctuation">(</span>index<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token keyword">get</span> <span class="token punctuation">{</span>\n            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">set</span> <span class="token punctuation">{</span>\n            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> newValue\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token function">IntArray</span><span class="token punctuation">(</span>array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\narray<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>\n<span class="token function">print</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_9-typealias-类型别名" tabindex="-1"><a class="header-anchor" href="#_9-typealias-类型别名" aria-hidden="true">#</a> 9. typealias 类型别名</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">typealias</span> <span class="token builtin">IntArray</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span>\n\n\n<span class="token keyword">protocol</span> A <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">protocol</span> B <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> b<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">typealias</span> C <span class="token operator">=</span> A <span class="token operator">&amp;</span> B\n\n<span class="token keyword">struct</span> D<span class="token punctuation">:</span> C <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">var</span> b<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_10-associatedtype-相关类型" tabindex="-1"><a class="header-anchor" href="#_10-associatedtype-相关类型" aria-hidden="true">#</a> 10. associatedType 相关类型</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">ArrayExtension</span> <span class="token punctuation">{</span>\n    associatedtype T\n    \n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">appendAndPrint</span><span class="token punctuation">(</span><span class="token number">_</span> newElement<span class="token punctuation">:</span> T<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">Array</span><span class="token punctuation">:</span> <span class="token builtin">ArrayExtension</span> <span class="token punctuation">{</span>\n    <span class="token keyword">typealias</span> T <span class="token operator">=</span> <span class="token builtin">Element</span>\n    \n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">appendAndPrint</span><span class="token punctuation">(</span><span class="token number">_</span> newElement<span class="token punctuation">:</span> <span class="token builtin">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>newElement<span class="token punctuation">)</span>\n        <span class="token function">append</span><span class="token punctuation">(</span>newElement<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\narray<span class="token punctuation">.</span><span class="token function">appendAndPrint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_11-可变参数" tabindex="-1"><a class="header-anchor" href="#_11-可变参数" aria-hidden="true">#</a> 11. 可变参数</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">_</span> number<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> number<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_12-初始化顺序" tabindex="-1"><a class="header-anchor" href="#_12-初始化顺序" aria-hidden="true">#</a> 12. 初始化顺序</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token builtin">String</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        name <span class="token operator">=</span> <span class="token string">&quot;长方形&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Square</span><span class="token punctuation">:</span> <span class="token builtin">Rectangle</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> sideLength<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        sideLength <span class="token operator">=</span> <span class="token number">10</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        name <span class="token operator">=</span> <span class="token string">&quot;正方形&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_13-可空初始化" tabindex="-1"><a class="header-anchor" href="#_13-可空初始化" aria-hidden="true">#</a> 13. 可空初始化</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">PositiveNumberString</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">String</span>\n    <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">guard</span> value <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token constant">nil</span> <span class="token punctuation">}</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token function">PositiveNumberString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>str <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span> <span class="token comment">// nil</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_14-函数默认参数" tabindex="-1"><a class="header-anchor" href="#_14-函数默认参数" aria-hidden="true">#</a> 14. 函数默认参数</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">printInt</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">printInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n<span class="token function">printInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_15-区间操作符" tabindex="-1"><a class="header-anchor" href="#_15-区间操作符" aria-hidden="true">#</a> 15. ... ..&lt; 区间操作符</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> range <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">3</span>\n<span class="token keyword">let</span> closedRange <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">3</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [0, 1, 2]</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span>closedRange<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [0, 1, 2, 3]</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_16-元类型" tabindex="-1"><a class="header-anchor" href="#_16-元类型" aria-hidden="true">#</a> 16. 元类型</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token keyword">Type</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;静态方法&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">func</span> <span class="token function">instanceMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;实例方法&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> instance<span class="token punctuation">:</span> <span class="token keyword">Type</span> <span class="token operator">=</span> <span class="token keyword">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\ninstance<span class="token punctuation">.</span><span class="token function">instanceMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 实例方法</span>\n<span class="token keyword">let</span> type<span class="token punctuation">:</span> <span class="token keyword">Type</span><span class="token punctuation">.</span><span class="token keyword">Type</span> <span class="token operator">=</span> <span class="token keyword">Type</span><span class="token punctuation">.</span><span class="token keyword">self</span>\ntype<span class="token punctuation">.</span><span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 静态方法</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_17-深拷贝" tabindex="-1"><a class="header-anchor" href="#_17-深拷贝" aria-hidden="true">#</a> 17. 深拷贝</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">Copyable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">Self</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">ReferenceInt</span><span class="token punctuation">:</span> <span class="token builtin">Copyable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">required</span> <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">func</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">type</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nb<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>\n<span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="_18-属性观察" tabindex="-1"><a class="header-anchor" href="#_18-属性观察" aria-hidden="true">#</a> 18. 属性观察</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">ValueInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token keyword">willSet</span> <span class="token punctuation">{</span>\n            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;值即将从<span class="token interpolation"><span class="token delimiter variable">\\(</span>value<span class="token delimiter variable">)</span></span>更改为<span class="token interpolation"><span class="token delimiter variable">\\(</span>newValue<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">didSet</span> <span class="token punctuation">{</span>\n            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;值已经从<span class="token interpolation"><span class="token delimiter variable">\\(</span>oldValue<span class="token delimiter variable">)</span></span>更改为<span class="token interpolation"><span class="token delimiter variable">\\(</span>value<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> variable <span class="token operator">=</span> <span class="token function">ValueInt</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\nvariable<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// 值即将从0更改为1 \\n 值已经从0更改为1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="_19-lazy-懒加载" tabindex="-1"><a class="header-anchor" href="#_19-lazy-懒加载" aria-hidden="true">#</a> 19. lazy 懒加载</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">LazyMan</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> food<span class="token punctuation">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;吃饭&quot;</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;食物&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \n    <span class="token keyword">lazy</span> <span class="token keyword">var</span> work<span class="token punctuation">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;起床&quot;</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;工作&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> man <span class="token operator">=</span> <span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 吃饭</span>\n<span class="token function">print</span><span class="token punctuation">(</span>man<span class="token punctuation">.</span>work<span class="token punctuation">)</span> <span class="token comment">// 起床 \\n 工作</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_20-懒实现序列" tabindex="-1"><a class="header-anchor" href="#_20-懒实现序列" aria-hidden="true">#</a> 20. 懒实现序列</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token keyword">lazy</span><span class="token punctuation">.</span><span class="token builtin">map</span> <span class="token punctuation">{</span> item <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在映射<span class="token interpolation"><span class="token delimiter variable">\\(</span>item<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> item <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> item <span class="token keyword">in</span> result <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;映射结果<span class="token interpolation"><span class="token delimiter variable">\\(</span>item<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">break</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 正在映射0</span>\n<span class="token comment">// 映射结果1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token builtin">map</span> <span class="token punctuation">{</span> item <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在映射<span class="token interpolation"><span class="token delimiter variable">\\(</span>item<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> item <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> item <span class="token keyword">in</span> result <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;映射结果<span class="token interpolation"><span class="token delimiter variable">\\(</span>item<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">break</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 正在映射0</span>\n<span class="token comment">// 正在映射1</span>\n<span class="token comment">// 正在映射2</span>\n<span class="token comment">// 正在映射3</span>\n<span class="token comment">// 映射结果1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_21-optional-map" tabindex="-1"><a class="header-anchor" href="#_21-optional-map" aria-hidden="true">#</a> 21. Optional Map</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> variable<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> variable<span class="token punctuation">.</span><span class="token builtin">map</span> <span class="token punctuation">{</span> variable <span class="token keyword">in</span>\n    variable <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>result <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span> <span class="token comment">// Optional(1)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> variable<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">var</span> result<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token constant">nil</span>\n<span class="token keyword">if</span> <span class="token keyword">let</span> variable <span class="token operator">=</span> variable <span class="token punctuation">{</span>\n    result <span class="token operator">=</span> variable <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>result <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span> <span class="token comment">// Optional(1)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_22-where-模式匹配" tabindex="-1"><a class="header-anchor" href="#_22-where-模式匹配" aria-hidden="true">#</a> 22. where 模式匹配</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> model <span class="token operator">=</span> <span class="token string">&quot;iPhone12 mini&quot;</span>\n\n<span class="token keyword">switch</span> model <span class="token punctuation">{</span>\n<span class="token keyword">case</span> <span class="token keyword">let</span> model <span class="token keyword">where</span> model<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">default</span><span class="token punctuation">:</span>\n    <span class="token keyword">break</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// iPhone</span>\n\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">10</span> <span class="token keyword">where</span> i <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 0 \\n 1 \\n 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_23-indirect-嵌套enum" tabindex="-1"><a class="header-anchor" href="#_23-indirect-嵌套enum" aria-hidden="true">#</a> 23. indirect 嵌套enum</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>indirect <span class="token keyword">enum</span> <span class="token builtin">LinkedNode</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> empty\n    <span class="token keyword">case</span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">LinkedNode</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> linkedList <span class="token operator">=</span> <span class="token builtin">LinkedNode</span><span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>empty<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span> <span class="token comment">// node(0, node(1, .node(2, .empty)))</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_24-实例方法的其它调用方式" tabindex="-1"><a class="header-anchor" href="#_24-实例方法的其它调用方式" aria-hidden="true">#</a> 24. 实例方法的其它调用方式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">ValueInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    <span class="token keyword">func</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token number">_</span> way<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span> way<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> v0 <span class="token operator">=</span> <span class="token function">ValueInt</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\nv0<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;(value:)&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 0 (value:)</span>\n<span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token builtin">ValueInt</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\nv1<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;.init(value:)&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 1 .init(value:)</span>\n\n<span class="token builtin">ValueInt</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>v0<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;ValueInt.call(_ self:)&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 0 ValueInt.call(_ self:)</span>\n\n<span class="token keyword">let</span> call <span class="token operator">=</span> <span class="token builtin">ValueInt</span><span class="token punctuation">.</span>call\n<span class="token function">call</span><span class="token punctuation">(</span>v0<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;call(_ self:)&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 0 call(_ self:)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_25-单例模式" tabindex="-1"><a class="header-anchor" href="#_25-单例模式" aria-hidden="true">#</a> 25. 单例模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">Singleton</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">let</span> shared <span class="token operator">=</span> <span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_26-条件编译" tabindex="-1"><a class="header-anchor" href="#_26-条件编译" aria-hidden="true">#</a> 26. 条件编译</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">UIKit</span>\n#elseif <span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">WatchKit</span>\n#elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">AppKit</span>\n#endif\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_27-注释标记" tabindex="-1"><a class="header-anchor" href="#_27-注释标记" aria-hidden="true">#</a> 27. 注释标记</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// MARK: - 分割线</span>\n<span class="token comment">// TODO: 待办</span>\n<span class="token comment">// FIXME: 待修复</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_28-可选协议" tabindex="-1"><a class="header-anchor" href="#_28-可选协议" aria-hidden="true">#</a> 28. 可选协议</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n<span class="token comment">// objc标记的协议只能被class类实现</span>\n<span class="token atrule">@objc</span> <span class="token keyword">protocol</span> <span class="token builtin">OptionalProtocol</span> <span class="token punctuation">{</span>\n    <span class="token atrule">@objc</span> <span class="token keyword">optional</span> <span class="token keyword">func</span> <span class="token function">optionalMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>使用协议扩展来实现可选协议</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">OptionalProtocol</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">optionalMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">OptionalProtocol</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">optionalMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_29-判断实例类型" tabindex="-1"><a class="header-anchor" href="#_29-判断实例类型" aria-hidden="true">#</a> 29. 判断实例类型</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">type</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Int</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">is</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_30-判断相等" tabindex="-1"><a class="header-anchor" href="#_30-判断相等" aria-hidden="true">#</a> 30. == === 判断相等</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">ReferenceInt</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">left</span><span class="token punctuation">:</span> <span class="token builtin">ReferenceInt</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">:</span> <span class="token builtin">ReferenceInt</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Bool</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">left</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token keyword">right</span><span class="token punctuation">.</span>value\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">ReferenceInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_31-格式化字符串" tabindex="-1"><a class="header-anchor" href="#_31-格式化字符串" aria-hidden="true">#</a> 31. 格式化字符串</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token string">&quot;%.2f&quot;</span><span class="token punctuation">,</span> <span class="token number">3.333333</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.33</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_32-optionset-操作集合" tabindex="-1"><a class="header-anchor" href="#_32-optionset-操作集合" aria-hidden="true">#</a> 32. OptionSet 操作集合</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">Options</span><span class="token punctuation">:</span> <span class="token builtin">OptionSet</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> rawValue<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">let</span> <span class="token keyword">left</span> <span class="token operator">=</span> <span class="token function">Options</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token keyword">static</span> <span class="token keyword">let</span> top <span class="token operator">=</span> <span class="token function">Options</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token keyword">static</span> <span class="token keyword">let</span> <span class="token keyword">right</span> <span class="token operator">=</span> <span class="token function">Options</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>\n    <span class="token keyword">static</span> <span class="token keyword">let</span> bottom <span class="token operator">=</span> <span class="token function">Options</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> option<span class="token punctuation">:</span> <span class="token builtin">Options</span> <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">left</span>\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 1)</span>\noption <span class="token operator">=</span> <span class="token punctuation">.</span>top\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 2)</span>\noption <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">right</span>\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 4)</span>\noption <span class="token operator">=</span> <span class="token punctuation">.</span>bottom\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 8)</span>\noption <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token keyword">left</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>top<span class="token punctuation">]</span>\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 3)</span>\noption <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token keyword">left</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token keyword">right</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">]</span>\n<span class="token function">print</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token comment">// Options(rawValue: 15)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="_33-enumerate-数组列举" tabindex="-1"><a class="header-anchor" href="#_33-enumerate-数组列举" aria-hidden="true">#</a> 33. enumerate 数组列举</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 0 10 \\n 1 11 \\n 2 12</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_34-associated-object扩展存储属性" tabindex="-1"><a class="header-anchor" href="#_34-associated-object扩展存储属性" aria-hidden="true">#</a> 34. Associated Object扩展存储属性</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">ObjectiveC</span>\n<span class="token comment">// 只能为class类扩展</span>\n<span class="token keyword">class</span> <span class="token class-name">IPhone</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">private</span> <span class="token keyword">var</span> key<span class="token punctuation">:</span> <span class="token builtin">Void</span><span class="token operator">?</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">IPhone</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> storage<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token operator">?</span> <span class="token punctuation">{</span>\n        <span class="token keyword">get</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">objc_getAssociatedObject</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">)</span> <span class="token keyword">as</span><span class="token operator">?</span> <span class="token builtin">Int</span>\n        <span class="token punctuation">}</span>\n        \n        <span class="token keyword">set</span> <span class="token punctuation">{</span>\n            <span class="token function">objc_setAssociatedObject</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token constant">OBJC_ASSOCIATION_RETAIN_NONATOMIC</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> iPhone <span class="token operator">=</span> <span class="token function">IPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>iPhone<span class="token punctuation">.</span>storage <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span> <span class="token comment">// nil</span>\niPhone<span class="token punctuation">.</span>storage <span class="token operator">=</span> <span class="token number">128</span>\n<span class="token function">print</span><span class="token punctuation">(</span>iPhone<span class="token punctuation">.</span>storage <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span> <span class="token comment">// Optional(128)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="_35-lock-锁" tabindex="-1"><a class="header-anchor" href="#_35-lock-锁" aria-hidden="true">#</a> 35. Lock 锁</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n\n<span class="token keyword">func</span> <span class="token function">synchronized</span><span class="token punctuation">(</span><span class="token number">_</span> lock<span class="token punctuation">:</span> <span class="token builtin">AnyObject</span><span class="token punctuation">,</span> execute<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">objc_sync_enter</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span>\n    <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">objc_sync_exit</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SafeData</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token number">0</span>\n    \n    <span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">_</span> number<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">synchronized</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data <span class="token operator">+</span><span class="token operator">=</span> number\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> safeData <span class="token operator">=</span> <span class="token function">SafeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> <span class="token number">_</span> <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">10000</span> <span class="token punctuation">{</span>\n    <span class="token builtin">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>async <span class="token punctuation">{</span>\n        safeData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>safeData<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment">// 10000</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="_36-编译符号" tabindex="-1"><a class="header-anchor" href="#_36-编译符号" aria-hidden="true">#</a> 36. 编译符号</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#file <span class="token comment">// 符号所在文件路径</span>\n#line <span class="token comment">// 符号所在行号</span>\n#column <span class="token comment">// 符号所在列</span>\n#function <span class="token comment">// 符号所在方法名</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_37-溢出操作符" tabindex="-1"><a class="header-anchor" href="#_37-溢出操作符" aria-hidden="true">#</a> 37. 溢出操作符</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> <span class="token builtin">max</span> <span class="token operator">=</span> <span class="token builtin">UInt</span><span class="token punctuation">.</span><span class="token builtin">max</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">,</span> radix<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// 1111111111111111111111111111111111111111111111111111111111111111</span>\n<span class="token builtin">max</span> <span class="token operator">=</span> <span class="token builtin">max</span> <span class="token operator">&amp;</span><span class="token operator">+</span> <span class="token number">1</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">,</span> radix<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_38-属性访问控制" tabindex="-1"><a class="header-anchor" href="#_38-属性访问控制" aria-hidden="true">#</a> 38. 属性访问控制</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">private</span>\nfileprivate\n<span class="token keyword">internal</span>\n<span class="token keyword">public</span>\nopen\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_39-swift解释执行" tabindex="-1"><a class="header-anchor" href="#_39-swift解释执行" aria-hidden="true">#</a> 39. Swift解释执行</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#<span class="token operator">!</span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>env swift\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_40-swiftc编译" tabindex="-1"><a class="header-anchor" href="#_40-swiftc编译" aria-hidden="true">#</a> 40. swiftc编译</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>swiftc main.swift\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_41-自定义打印输出" tabindex="-1"><a class="header-anchor" href="#_41-自定义打印输出" aria-hidden="true">#</a> 41. 自定义打印输出</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">ValueInt</span><span class="token punctuation">:</span> <span class="token builtin">CustomStringConvertible</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token builtin">String</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;这是一个自定义的描述<span class="token interpolation"><span class="token delimiter variable">\\(</span>value<span class="token delimiter variable">)</span></span>&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">ValueInt</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 这是一个自定义的描述1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_42-断言" tabindex="-1"><a class="header-anchor" href="#_42-断言" aria-hidden="true">#</a> 42. 断言</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// 断言只在Debug模式下有效</span>\n<span class="token function">assert</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_43-错误退出" tabindex="-1"><a class="header-anchor" href="#_43-错误退出" aria-hidden="true">#</a> 43. 错误退出</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_44-指针操作" tabindex="-1"><a class="header-anchor" href="#_44-指针操作" aria-hidden="true">#</a> 44. 指针操作</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">//#include &quot;stdio.h&quot;</span>\n<span class="token comment">//</span>\n<span class="token comment">//int main() {</span>\n<span class="token comment">//    int a[] = {0, 1, 2};</span>\n<span class="token comment">//    int *p = a;</span>\n<span class="token comment">//    *(p+2) = 3;</span>\n<span class="token comment">//    for(int i; i &lt; 3; i ++) {</span>\n<span class="token comment">//        printf(&quot;%d\\n&quot;, a[i]);</span>\n<span class="token comment">//    }</span>\n<span class="token comment">//    // 0 \\n 1 \\n 3 \\n</span>\n<span class="token comment">//    return 0;</span>\n<span class="token comment">//}</span>\n\n<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>\n<span class="token keyword">let</span> pointer <span class="token operator">=</span> <span class="token builtin">UnsafeMutableBufferPointer</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>start<span class="token punctuation">:</span> <span class="token operator">&amp;</span>array<span class="token punctuation">,</span> <span class="token builtin">count</span><span class="token punctuation">:</span> array<span class="token punctuation">.</span><span class="token builtin">count</span><span class="token punctuation">)</span><span class="token punctuation">.</span>baseAddress\npointer<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">advanced</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pointee <span class="token operator">=</span> <span class="token number">3</span>\n<span class="token function">print</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token comment">// [0, 1, 3]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_45-条件协议扩展" tabindex="-1"><a class="header-anchor" href="#_45-条件协议扩展" aria-hidden="true">#</a> 45. 条件协议扩展</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">NumberProtocol</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">Int</span><span class="token punctuation">:</span> <span class="token builtin">NumberProtocol</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">NumberProtocol</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;只有Int类型才可以有此方法&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',97),e={render:function(n,s){return p}}}}]);
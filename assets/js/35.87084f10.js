(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{389:function(t,e,a){"use strict";a.r(e);var r=a(45),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"uikit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uikit"}},[t._v("#")]),t._v(" UIKit")]),t._v(" "),a("h2",{attrs:{id:"_1-uiview-和-calayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-uiview-和-calayer"}},[t._v("#")]),t._v(" 1. UIView 和 CALayer")]),t._v(" "),a("ul",[a("li",[t._v("UIView继承UIResponder，可以响应事件；")]),t._v(" "),a("li",[t._v("CALayer用来绘制内容；")]),t._v(" "),a("li",[t._v("UIView设置表现和位置时，内部实际是对所持有的layer的更改")])]),t._v(" "),a("h2",{attrs:{id:"_2-frame-和-bounds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-frame-和-bounds"}},[t._v("#")]),t._v(" 2. Frame 和 Bounds")]),t._v(" "),a("ul",[a("li",[t._v("在width和height上frame和bounds没有什么区别")]),t._v(" "),a("li",[t._v("frame设置控件在父控件坐标系中的位置；bounds更改控件自身的坐标系")]),t._v(" "),a("li",[t._v("默认坐标系是左上角为(0,0)，向右向下(x,y)变大，更改bounds的(x,y)可以改变坐标系左上角为(x,y)，\n子控件自然随着控件自身坐标系的更改而改动位置")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
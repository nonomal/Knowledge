(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[3196],{1332:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-a3aab7a6",path:"/Swift/ReferenceManual/Declarations.html",title:"声明",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"顶级代码",slug:"顶级代码",children:[]},{level:2,title:"代码块",slug:"代码块",children:[]},{level:2,title:"导入声明",slug:"导入声明",children:[]},{level:2,title:"常量声明",slug:"常量声明",children:[]},{level:2,title:"变量声明",slug:"变量声明",children:[{level:3,title:"存储变量和存储属性",slug:"存储变量和存储属性",children:[]},{level:3,title:"计算变量和计算属性",slug:"计算变量和计算属性",children:[]},{level:3,title:"存储变量观察器和存储属性观察器",slug:"存储变量观察器和存储属性观察器",children:[]},{level:3,title:"类型的属性",slug:"类型的属性",children:[]}]},{level:2,title:"类型别名声明",slug:"类型别名声明",children:[]},{level:2,title:"函数声明",slug:"函数声明",children:[{level:3,title:"参数名",slug:"参数名",children:[]},{level:3,title:"输入输出参数",slug:"输入输出参数",children:[]},{level:3,title:"特殊参数",slug:"特殊参数",children:[]},{level:3,title:"特殊方法",slug:"特殊方法",children:[]},{level:3,title:"特殊名称方法",slug:"特殊名称方法",children:[]},{level:3,title:"抛出异常的函数和方法",slug:"抛出异常的函数和方法",children:[]},{level:3,title:"重抛异常的函数和方法",slug:"重抛异常的函数和方法",children:[]},{level:3,title:"异步函数和方法",slug:"异步函数和方法",children:[]},{level:3,title:"永不返回的函数",slug:"永不返回的函数",children:[]}]},{level:2,title:"枚举声明",slug:"枚举声明",children:[]},{level:2,title:"结构体声明",slug:"结构体声明",children:[]},{level:2,title:"类声明",slug:"类声明",children:[]},{level:2,title:"参与者声明",slug:"参与者声明",children:[]},{level:2,title:"协议声明",slug:"协议声明",children:[]},{level:2,title:"初始化器声明",slug:"初始化器声明",children:[]},{level:2,title:"反初始化器声明",slug:"反初始化器声明",children:[]},{level:2,title:"扩展声明",slug:"扩展声明",children:[]},{level:2,title:"下标声明",slug:"下标声明",children:[]},{level:2,title:"运算符声明",slug:"运算符声明",children:[]},{level:2,title:"优先级组声明",slug:"优先级组声明",children:[]},{level:2,title:"声明修饰符",slug:"声明修饰符",children:[{level:3,title:"访问控制级别",slug:"访问控制级别",children:[]}]}],filePathRelative:"Swift/ReferenceManual/Declarations.md",git:{updatedTime:1646705792e3,contributors:[]}}},824:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="声明" tabindex="-1"><a class="header-anchor" href="#声明" aria-hidden="true">#</a> 声明</h1><h2 id="顶级代码" tabindex="-1"><a class="header-anchor" href="#顶级代码" aria-hidden="true">#</a> 顶级代码</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="代码块" tabindex="-1"><a class="header-anchor" href="#代码块" aria-hidden="true">#</a> 代码块</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="导入声明" tabindex="-1"><a class="header-anchor" href="#导入声明" aria-hidden="true">#</a> 导入声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n\n<span class="token keyword">import</span> <span class="token builtin">Foundation</span><span class="token punctuation">.</span><span class="token builtin">NSObject</span>\n\n<span class="token keyword">import</span> <span class="token keyword">struct</span> <span class="token builtin">Foundation</span><span class="token punctuation">.</span><span class="token builtin">CGFloat</span>\n\n<span class="token keyword">import</span> <span class="token keyword">class</span> <span class="token class-name">Foundation<span class="token punctuation">.</span>NSObject</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="常量声明" tabindex="-1"><a class="header-anchor" href="#常量声明" aria-hidden="true">#</a> 常量声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> zero <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token keyword">let</span> zero<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="变量声明" tabindex="-1"><a class="header-anchor" href="#变量声明" aria-hidden="true">#</a> 变量声明</h2><h3 id="存储变量和存储属性" tabindex="-1"><a class="header-anchor" href="#存储变量和存储属性" aria-hidden="true">#</a> 存储变量和存储属性</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span>\n\n<span class="token keyword">var</span> x<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="计算变量和计算属性" tabindex="-1"><a class="header-anchor" href="#计算变量和计算属性" aria-hidden="true">#</a> 计算变量和计算属性</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token number">1</span>\n\n<span class="token keyword">var</span> opposite<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token punctuation">{</span>\n        <span class="token operator">-</span>number\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">set</span> <span class="token punctuation">{</span>\n        number <span class="token operator">=</span> <span class="token operator">-</span>newValue\n    <span class="token punctuation">}</span>\n    \n<span class="token comment">//    set(newNumber) {</span>\n<span class="token comment">//        number = -newNumber</span>\n<span class="token comment">//    }</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>opposite<span class="token punctuation">)</span> <span class="token comment">// -1</span>\nopposite <span class="token operator">=</span> <span class="token number">3</span>\n<span class="token function">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment">// -3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> bit <span class="token operator">=</span> <span class="token number">8</span>\n\n<span class="token keyword">var</span> byte<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    bit <span class="token operator">/</span> <span class="token number">8</span>\n    \n<span class="token comment">//    get {</span>\n<span class="token comment">//        bit / 8</span>\n<span class="token comment">//    }</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="存储变量观察器和存储属性观察器" tabindex="-1"><a class="header-anchor" href="#存储变量观察器和存储属性观察器" aria-hidden="true">#</a> 存储变量观察器和存储属性观察器</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">{</span>\n    <span class="token keyword">willSet</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token interpolation"><span class="token delimiter variable">\\(</span>x<span class="token delimiter variable">)</span></span> will set to <span class="token interpolation"><span class="token delimiter variable">\\(</span>newValue<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">didSet</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token interpolation"><span class="token delimiter variable">\\(</span>oldValue<span class="token delimiter variable">)</span></span> did set to <span class="token interpolation"><span class="token delimiter variable">\\(</span>x<span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nx <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token comment">// 0 will set to 1</span>\n<span class="token comment">// 0 did set to 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="类型的属性" tabindex="-1"><a class="header-anchor" href="#类型的属性" aria-hidden="true">#</a> 类型的属性</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">SomeStructure</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">var</span> y<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">var</span> y<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">class</span> <span class="token class-name">var</span> x<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token number">0</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Child</span><span class="token punctuation">:</span> <span class="token builtin">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">override</span> <span class="token keyword">class</span> <span class="token class-name">var</span> x<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="类型别名声明" tabindex="-1"><a class="header-anchor" href="#类型别名声明" aria-hidden="true">#</a> 类型别名声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">typealias</span> <span class="token builtin">Dict</span> <span class="token operator">=</span> <span class="token builtin">Dictionary</span>\n<span class="token keyword">typealias</span> <span class="token builtin">StringDict</span><span class="token operator">&lt;</span><span class="token builtin">Value</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token builtin">Dictionary</span><span class="token operator">&lt;</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Value</span><span class="token operator">&gt;</span>\n\n<span class="token keyword">let</span> dict1<span class="token punctuation">:</span> <span class="token builtin">Dict</span><span class="token operator">&lt;</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>\n<span class="token keyword">let</span> dict2<span class="token punctuation">:</span> <span class="token builtin">StringDict</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="函数声明" tabindex="-1"><a class="header-anchor" href="#函数声明" aria-hidden="true">#</a> 函数声明</h2><h3 id="参数名" tabindex="-1"><a class="header-anchor" href="#参数名" aria-hidden="true">#</a> 参数名</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    a <span class="token operator">+</span> b\n<span class="token punctuation">}</span>\n\n<span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">_</span> a<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> x b<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    a <span class="token operator">+</span> b\n<span class="token punctuation">}</span>\n\n<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="输入输出参数" tabindex="-1"><a class="header-anchor" href="#输入输出参数" aria-hidden="true">#</a> 输入输出参数</h3><p>调用函数时，复制参数；在函数中，副本被修改；函数返回时，副本被赋值给原参数</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> _x <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">var</span> x<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;copy in&quot;</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> _x\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">set</span> <span class="token punctuation">{</span>\n        _x <span class="token operator">=</span> newValue\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;copy out&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    x <span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;copy is modified&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span>\n<span class="token comment">// copy in</span>\n<span class="token comment">// copy is modified</span>\n<span class="token comment">// copy out</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token comment">// 捕获输入输出参数，不改变它</span>\n<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>async <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token keyword">in</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 捕获输入输出参数，并改变它</span>\n<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> local <span class="token operator">=</span> x\n    <span class="token keyword">defer</span> <span class="token punctuation">{</span>\n        x <span class="token operator">=</span> local\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token function">DispatchQueue</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> <span class="token string">&quot;serial&quot;</span><span class="token punctuation">)</span>\n    queue<span class="token punctuation">.</span>async <span class="token punctuation">{</span>\n        local <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    queue<span class="token punctuation">.</span>sync <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="特殊参数" tabindex="-1"><a class="header-anchor" href="#特殊参数" aria-hidden="true">#</a> 特殊参数</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">_</span> number<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span> <span class="token comment">// 可变参数</span>\n    <span class="token keyword">return</span> number<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>\n\n\n<span class="token keyword">func</span> <span class="token function">printInt</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">printInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n<span class="token function">printInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="特殊方法" tabindex="-1"><a class="header-anchor" href="#特殊方法" aria-hidden="true">#</a> 特殊方法</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">SomeStructure</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span>\n\n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">modify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        x <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Child</span><span class="token punctuation">:</span> <span class="token builtin">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Cannot override static method</span>\n    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function">typeMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n    \n    <span class="token comment">// Class method overrides a &#39;final&#39; class method</span>\n    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">func</span> <span class="token function">typeMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n    \n    <span class="token comment">// 允许子类重写</span>\n    <span class="token keyword">class</span> <span class="token class-name">func</span> <span class="token function">typeMethod3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="特殊名称方法" tabindex="-1"><a class="header-anchor" href="#特殊名称方法" aria-hidden="true">#</a> 特殊名称方法</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">AddTo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> adder<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">func</span> <span class="token function">callAsFunction</span><span class="token punctuation">(</span><span class="token number">_</span> num<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        adder <span class="token operator">+</span> num\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">let</span> addToOne <span class="token operator">=</span> <span class="token function">AddTo</span><span class="token punctuation">(</span>adder<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> addToTwo <span class="token operator">=</span> <span class="token function">AddTo</span><span class="token punctuation">(</span>adder<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">addToOne</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 11</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">addToTwo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="抛出异常的函数和方法" tabindex="-1"><a class="header-anchor" href="#抛出异常的函数和方法" aria-hidden="true">#</a> 抛出异常的函数和方法</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">makeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token function">NSError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="重抛异常的函数和方法" tabindex="-1"><a class="header-anchor" href="#重抛异常的函数和方法" aria-hidden="true">#</a> 重抛异常的函数和方法</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">rethrowError</span><span class="token punctuation">(</span>block<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Void</span><span class="token punctuation">)</span> <span class="token keyword">rethrows</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 函数将闭包内的异常再次抛出以交由外部处理</span>\n<span class="token keyword">try</span><span class="token operator">?</span> rethrowError <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token function">NSError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="异步函数和方法" tabindex="-1"><a class="header-anchor" href="#异步函数和方法" aria-hidden="true">#</a> 异步函数和方法</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> async <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token operator">!</span> await <span class="token builtin">Task</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>nanoseconds<span class="token punctuation">:</span> <span class="token number">1000_000_000</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> n <span class="token operator">=</span> await <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="永不返回的函数" tabindex="-1"><a class="header-anchor" href="#永不返回的函数" aria-hidden="true">#</a> 永不返回的函数</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">crash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Never</span> <span class="token punctuation">{</span>\n    <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string">&quot;bad apple&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="枚举声明" tabindex="-1"><a class="header-anchor" href="#枚举声明" aria-hidden="true">#</a> 枚举声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">enum</span> <span class="token builtin">SomeEnumeration</span><span class="token punctuation">:</span> <span class="token builtin">Equatable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> aCase\n    <span class="token keyword">case</span> <span class="token function">withAssociatedValue</span><span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">// 数值类型枚举默认rawValue值自动递增</span>\n<span class="token keyword">enum</span> <span class="token builtin">RawIntEnumeration</span><span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> aCase <span class="token operator">=</span> <span class="token number">10</span>\n    <span class="token keyword">case</span> bCase <span class="token comment">// rawValue 11</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 字符串类型枚举默认rawValue值与标识符相同</span>\n<span class="token keyword">enum</span> <span class="token builtin">RawStringEnumeration</span><span class="token punctuation">:</span> <span class="token builtin">String</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> aCase <span class="token comment">// rawValue &quot;aCase&quot;</span>\n    <span class="token keyword">case</span> bCase <span class="token comment">// rawValue &quot;bCase&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>indirect <span class="token keyword">enum</span> <span class="token builtin">LinkedNode</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> empty\n    <span class="token keyword">case</span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">LinkedNode</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> linkedList <span class="token operator">=</span> <span class="token builtin">LinkedNode</span><span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>empty<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span> <span class="token comment">// node(0, node(1, .node(2, .empty)))</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="结构体声明" tabindex="-1"><a class="header-anchor" href="#结构体声明" aria-hidden="true">#</a> 结构体声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">SomeStructure</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="类声明" tabindex="-1"><a class="header-anchor" href="#类声明" aria-hidden="true">#</a> 类声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="参与者声明" tabindex="-1"><a class="header-anchor" href="#参与者声明" aria-hidden="true">#</a> 参与者声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>actor <span class="token builtin">SomeActor</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="协议声明" tabindex="-1"><a class="header-anchor" href="#协议声明" aria-hidden="true">#</a> 协议声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    associatedtype <span class="token builtin">SomeType</span>\n    \n    <span class="token keyword">var</span> x<span class="token punctuation">:</span> <span class="token builtin">SomeType</span> <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token keyword">set</span><span class="token punctuation">}</span>\n    \n    <span class="token keyword">func</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">subscript</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token keyword">set</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// 仅类可以实现的协议</span>\n<span class="token keyword">protocol</span> <span class="token builtin">ClassOnlyProtocol</span><span class="token punctuation">:</span> <span class="token builtin">AnyObject</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="初始化器声明" tabindex="-1"><a class="header-anchor" href="#初始化器声明" aria-hidden="true">#</a> 初始化器声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> father<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token comment">// designated initializer</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span>father<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>father <span class="token operator">=</span> father\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Child</span><span class="token punctuation">:</span> <span class="token builtin">Super</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> child<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n    \n    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span>father<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        child <span class="token operator">=</span> <span class="token number">0</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>father<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>father <span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token comment">// designated initializer</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span>child<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>child <span class="token operator">=</span> child\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>father<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\n        father <span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token comment">// convenience initializer</span>\n    <span class="token keyword">convenience</span> <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>child<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">PositiveNumberString</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token builtin">String</span>\n\n    <span class="token comment">// 可失败初始化器</span>\n    <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token number">_</span> value<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">guard</span> value <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token constant">nil</span> <span class="token punctuation">}</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token function">PositiveNumberString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="反初始化器声明" tabindex="-1"><a class="header-anchor" href="#反初始化器声明" aria-hidden="true">#</a> 反初始化器声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">deinit</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="扩展声明" tabindex="-1"><a class="header-anchor" href="#扩展声明" aria-hidden="true">#</a> 扩展声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">struct</span> <span class="token builtin">SomeStructure</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">SomeStructure</span><span class="token punctuation">:</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">struct</span> <span class="token builtin">SomeStructure</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">SomeStructure</span><span class="token punctuation">:</span> <span class="token builtin">SomeProtocol</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> <span class="token builtin">Serializable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">protocol</span> <span class="token builtin">SerializableInArray</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n<span class="token keyword">extension</span> <span class="token builtin">Int</span><span class="token punctuation">:</span> <span class="token builtin">SerializableInArray</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n<span class="token keyword">extension</span> <span class="token builtin">String</span><span class="token punctuation">:</span> <span class="token builtin">SerializableInArray</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">Array</span><span class="token punctuation">:</span> <span class="token builtin">Serializable</span> <span class="token keyword">where</span> <span class="token builtin">Element</span><span class="token punctuation">:</span> <span class="token builtin">SerializableInArray</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="下标声明" tabindex="-1"><a class="header-anchor" href="#下标声明" aria-hidden="true">#</a> 下标声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">List</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span>\n    \n    <span class="token keyword">subscript</span><span class="token punctuation">(</span>index<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token keyword">get</span> <span class="token punctuation">{</span>\n            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n        \n        <span class="token keyword">set</span> <span class="token punctuation">{</span>\n            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> newValue\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">List</span><span class="token punctuation">(</span>array<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="运算符声明" tabindex="-1"><a class="header-anchor" href="#运算符声明" aria-hidden="true">#</a> 运算符声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">postfix</span> <span class="token keyword">operator</span> <span class="token operator">++</span>\n<span class="token keyword">prefix</span> <span class="token keyword">operator</span> <span class="token operator">++</span>\n<span class="token keyword">infix</span> <span class="token keyword">operator</span> <span class="token operator">++</span>\n\n<span class="token keyword">extension</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">postfix</span> <span class="token keyword">func</span> <span class="token operator">++</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">prefix</span> <span class="token keyword">func</span> <span class="token operator">++</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">++</span><span class="token punctuation">(</span><span class="token keyword">left</span><span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token keyword">right</span><span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Int</span> <span class="token punctuation">{</span>\n        <span class="token keyword">left</span> <span class="token operator">+</span> <span class="token keyword">right</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>\ni<span class="token operator">++</span>\n<span class="token operator">++</span>i\n<span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// 2</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">++</span> i<span class="token punctuation">)</span> <span class="token comment">// 3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="优先级组声明" tabindex="-1"><a class="header-anchor" href="#优先级组声明" aria-hidden="true">#</a> 优先级组声明</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>precedencegroup 优先级组名称<span class="token punctuation">{</span>\n    higherThan<span class="token punctuation">:</span> 较低优先级组的名称\n    lowerThan<span class="token punctuation">:</span> 较高优先级组的名称\n    <span class="token keyword">associativity</span><span class="token punctuation">:</span> 结合性\n    assignment<span class="token punctuation">:</span> 赋值性\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="声明修饰符" tabindex="-1"><a class="header-anchor" href="#声明修饰符" aria-hidden="true">#</a> 声明修饰符</h2><p><code>class</code> 修饰符表明是类自身的成员，而不是类实例的成员</p><p><code>dynamic</code> 修饰由Objective-C Runtime动态派发的成员</p><p><code>final</code> 限制类被继承，限制类成员被重写</p><p><code>lazy</code> 修饰的属性第一次被访问时，计算和存储一次</p><p><code>optional</code> 修饰@objc协议的可选成员</p><p><code>required</code> 修饰的初始化器子类必须实现</p><p><code>static</code> 修饰类型成员，而不是类实例成员，且不允许子类重写</p><p><code>unowned</code> 无主引用</p><p><code>weak</code> 弱引用</p><h3 id="访问控制级别" tabindex="-1"><a class="header-anchor" href="#访问控制级别" aria-hidden="true">#</a> 访问控制级别</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">private</span>\nfileprivate\n<span class="token keyword">internal</span>\n<span class="token keyword">public</span>\nopen\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',82),e={render:function(n,s){return p}}}}]);
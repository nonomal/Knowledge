(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[2970],{4389:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-98de5b6a",path:"/iOS/Foundation.html",title:"Foundation",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"蛇形JSON解析自动转换为驼峰",slug:"蛇形json解析自动转换为驼峰",children:[]}],filePathRelative:"iOS/Foundation.md",git:{updatedTime:1642749404e3,contributors:[]}}},6323:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="foundation" tabindex="-1"><a class="header-anchor" href="#foundation" aria-hidden="true">#</a> Foundation</h1><h2 id="蛇形json解析自动转换为驼峰" tabindex="-1"><a class="header-anchor" href="#蛇形json解析自动转换为驼峰" aria-hidden="true">#</a> 蛇形JSON解析自动转换为驼峰</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">struct</span> <span class="token builtin">Hello</span><span class="token punctuation">:</span> <span class="token builtin">Decodable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> camelSnake<span class="token punctuation">:</span> <span class="token builtin">Int</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> decoder <span class="token operator">=</span> <span class="token function">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\ndecoder<span class="token punctuation">.</span>keyDecodingStrategy <span class="token operator">=</span> <span class="token punctuation">.</span>convertFromSnakeCase\n<span class="token keyword">let</span> hello <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span> decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token builtin">Hello</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token string">&quot;{\\&quot;camel_snake\\&quot;: 1}&quot;</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',3),t={render:function(n,s){return e}}}}]);
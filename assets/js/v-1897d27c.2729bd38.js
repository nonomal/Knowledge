(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[4737],{8775:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-1897d27c",path:"/Unclassified/SQLite3.html",title:"SQLite3",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Swift",slug:"swift",children:[]},{level:2,title:"C",slug:"c",children:[]}],filePathRelative:"Unclassified/SQLite3.md",git:{updatedTime:1642670075e3,contributors:[]}}},8902:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="sqlite3" tabindex="-1"><a class="header-anchor" href="#sqlite3" aria-hidden="true">#</a> SQLite3</h1><h2 id="swift" tabindex="-1"><a class="header-anchor" href="#swift" aria-hidden="true">#</a> Swift</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">SQLite3</span>\n\n<span class="token keyword">var</span> db<span class="token punctuation">:</span> <span class="token builtin">OpaquePointer</span><span class="token operator">?</span>\n<span class="token keyword">var</span> resultCode <span class="token operator">=</span> <span class="token function">sqlite3_open</span><span class="token punctuation">(</span><span class="token string">&quot;test.db&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>db<span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> resultCode <span class="token operator">!=</span> <span class="token constant">SQLITE_OK</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>cString<span class="token punctuation">:</span> <span class="token function">sqlite3_errmsg</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token function">sqlite3_close</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">var</span> errmsg<span class="token punctuation">:</span> <span class="token builtin">UnsafeMutablePointer</span><span class="token operator">&lt;</span><span class="token builtin">CChar</span><span class="token operator">&gt;</span><span class="token operator">?</span>\n<span class="token keyword">var</span> customValue <span class="token operator">=</span> <span class="token string">&quot;custom value&quot;</span>\n\nresultCode <span class="token operator">=</span> <span class="token function">sqlite3_exec</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token string">&quot;SQL STATEMENT&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> custom<span class="token punctuation">,</span> <span class="token builtin">count</span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> keys <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>cString<span class="token punctuation">:</span> <span class="token function">unsafeBitCast</span><span class="token punctuation">(</span>custom<span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token builtin">UnsafeMutablePointer</span><span class="token operator">&lt;</span><span class="token builtin">CChar</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token builtin">count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token interpolation"><span class="token delimiter variable">\\(</span><span class="token function">String</span><span class="token punctuation">(</span>cString<span class="token punctuation">:</span> keys<span class="token operator">!</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token delimiter variable">)</span></span>: <span class="token interpolation"><span class="token delimiter variable">\\(</span><span class="token function">String</span><span class="token punctuation">(</span>cString<span class="token punctuation">:</span> values<span class="token operator">!</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">return</span> <span class="token number">0</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">UnsafeMutableRawPointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>customValue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>errmsg<span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> resultCode <span class="token operator">!=</span> <span class="token constant">SQLITE_OK</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>cString<span class="token punctuation">:</span> errmsg<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token function">sqlite3_free</span><span class="token punctuation">(</span>errmsg<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">sqlite3_close</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="c" tabindex="-1"><a class="header-anchor" href="#c" aria-hidden="true">#</a> C</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sqlite3.h&gt;</span></span>\n\n<span class="token keyword">int</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>custom<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>values<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>keys<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>custom<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s: %s\\n&quot;</span><span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">?</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">&quot;NULL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    sqlite3 <span class="token operator">*</span>db<span class="token punctuation">;</span>\n    <span class="token keyword">int</span> rc <span class="token operator">=</span> <span class="token function">sqlite3_open</span><span class="token punctuation">(</span><span class="token string">&quot;test.db&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>rc <span class="token operator">!=</span> SQLITE_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> <span class="token function">sqlite3_errmsg</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">sqlite3_close</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">char</span> <span class="token operator">*</span>errmsg<span class="token punctuation">;</span>\n    rc <span class="token operator">=</span> <span class="token function">sqlite3_exec</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token string">&quot;SQL STATEMENT&quot;</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token string">&quot;custom value&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>rc <span class="token operator">!=</span> SQLITE_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">sqlite3_free</span><span class="token punctuation">(</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token function">sqlite3_close</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>',5),t={render:function(n,s){return p}}}}]);
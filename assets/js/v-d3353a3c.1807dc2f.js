(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[267],{1796:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-d3353a3c",path:"/iOS/Design-patterns.html",title:"设计模式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. 单例模式",slug:"_1-单例模式",children:[]},{level:2,title:"2. 代理模式",slug:"_2-代理模式",children:[]},{level:2,title:"3. 观察者模式",slug:"_3-观察者模式",children:[]},{level:2,title:"4. 工厂模式",slug:"_4-工厂模式",children:[]},{level:2,title:"5. 装饰器模式",slug:"_5-装饰器模式",children:[]},{level:2,title:"6. 迭代器模式",slug:"_6-迭代器模式",children:[]}],filePathRelative:"iOS/Design-patterns.md",git:{updatedTime:1625294278e3,contributors:[]}}},7165:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>o});var p=a(6252);const t=(0,p.uE)('<h1 id="设计模式" tabindex="-1"><a class="header-anchor" href="#设计模式" aria-hidden="true">#</a> 设计模式</h1><h2 id="_1-单例模式" tabindex="-1"><a class="header-anchor" href="#_1-单例模式" aria-hidden="true">#</a> 1. 单例模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">let</span> shared <span class="token operator">=</span> <span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-代理模式" tabindex="-1"><a class="header-anchor" href="#_2-代理模式" aria-hidden="true">#</a> 2. 代理模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">//代理模式</span>\n\n<span class="token comment">//A的代理协议</span>\n<span class="token keyword">protocol</span> <span class="token builtin">ADelegate</span> <span class="token punctuation">{</span>\n    <span class="token comment">//回调</span>\n    <span class="token keyword">func</span> <span class="token function">callBack</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//A类</span>\n<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>\n    <span class="token comment">//A的代理</span>\n    <span class="token keyword">var</span> delegate<span class="token punctuation">:</span> <span class="token builtin">ADelegate</span><span class="token operator">?</span>\n    <span class="token comment">//执行A的函数</span>\n    <span class="token keyword">func</span> <span class="token function">goBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token keyword">let</span> delegate <span class="token operator">=</span> delegate <span class="token punctuation">{</span>\n            <span class="token comment">//代理回调</span>\n            delegate<span class="token punctuation">.</span><span class="token function">callBack</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//B类是A的代理实现</span>\n<span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">:</span> <span class="token builtin">ADelegate</span> <span class="token punctuation">{</span>\n    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token comment">//把B类对象作为a对象的代理</span>\n        a<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token keyword">self</span>\n        a<span class="token punctuation">.</span><span class="token function">goBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//回调执行</span>\n    <span class="token keyword">func</span> <span class="token function">callBack</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//B构造执行init</span>\n<span class="token function">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="_3-观察者模式" tabindex="-1"><a class="header-anchor" href="#_3-观察者模式" aria-hidden="true">#</a> 3. 观察者模式</h2>',6),e=(0,p.Uk)("观察者模式"),c=(0,p.uE)('<p>Key-Value Observing</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Subject</span><span class="token punctuation">:</span> <span class="token builtin">NSObject</span> <span class="token punctuation">{</span>\n    <span class="token atrule">@objc</span> <span class="token keyword">dynamic</span> <span class="token keyword">var</span> state <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Observer</span><span class="token punctuation">:</span> <span class="token builtin">NSObject</span> <span class="token punctuation">{</span>\n    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">observeValue</span><span class="token punctuation">(</span>forKeyPath keyPath<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token operator">?</span><span class="token punctuation">,</span>\n                               of object<span class="token punctuation">:</span> <span class="token builtin">Any</span><span class="token operator">?</span><span class="token punctuation">,</span>\n                               change<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">NSKeyValueChangeKey</span> <span class="token punctuation">:</span> <span class="token builtin">Any</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">,</span>\n                               context<span class="token punctuation">:</span> <span class="token builtin">UnsafeMutableRawPointer</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>change<span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">.</span>newKey<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">Any</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> subject <span class="token operator">=</span> <span class="token function">Subject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> observer <span class="token operator">=</span> <span class="token function">Observer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nsubject<span class="token punctuation">.</span><span class="token function">addObserver</span><span class="token punctuation">(</span>observer<span class="token punctuation">,</span> forKeyPath<span class="token punctuation">:</span> <span class="token string">&quot;state&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token constant">nil</span><span class="token punctuation">)</span>\nsubject<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token comment">// print: Optional(1)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Notification</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token builtin">Foundation</span>\n\n<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token builtin">Notification</span><span class="token punctuation">.</span><span class="token builtin">Name</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token string">&quot;event&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">class</span> <span class="token class-name">ObjectA</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">ObjectB</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> objectA <span class="token operator">=</span> <span class="token function">ObjectA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> objectB <span class="token operator">=</span> <span class="token function">ObjectB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// NotificationCenter实际上是观察者模式中的被观察对象</span>\n<span class="token keyword">let</span> center <span class="token operator">=</span> <span class="token builtin">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span>\n\ncenter<span class="token punctuation">.</span><span class="token function">addObserver</span><span class="token punctuation">(</span>forName<span class="token punctuation">:</span> name<span class="token punctuation">,</span> object<span class="token punctuation">:</span> <span class="token constant">nil</span><span class="token punctuation">,</span> queue<span class="token punctuation">:</span> <span class="token punctuation">.</span>main<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>notification<span class="token punctuation">)</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;我接收所有对象的通知&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发送至<span class="token interpolation"><span class="token delimiter variable">\\(</span>notification<span class="token punctuation">.</span>object <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">&quot;所有对象&quot;</span><span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\ncenter<span class="token punctuation">.</span><span class="token function">addObserver</span><span class="token punctuation">(</span>forName<span class="token punctuation">:</span> name<span class="token punctuation">,</span> object<span class="token punctuation">:</span> objectA<span class="token punctuation">,</span> queue<span class="token punctuation">:</span> <span class="token punctuation">.</span>main<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>notification<span class="token punctuation">)</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;我只接收A的通知&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发送至<span class="token interpolation"><span class="token delimiter variable">\\(</span>notification<span class="token punctuation">.</span>object <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">&quot;所有对象&quot;</span><span class="token delimiter variable">)</span></span>&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\ncenter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> object<span class="token punctuation">:</span> <span class="token constant">nil</span><span class="token punctuation">)</span>\ncenter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> object<span class="token punctuation">:</span> objectA<span class="token punctuation">)</span>\ncenter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> object<span class="token punctuation">:</span> objectB<span class="token punctuation">)</span>\n<span class="token comment">// print: 我接收所有对象的通知 发送至所有对象</span>\n<span class="token comment">//        我接收所有对象的通知 发送至ObjectA</span>\n<span class="token comment">//        我只接收A的通知 发送至ObjectA</span>\n<span class="token comment">//        我接收所有对象的通知 发送至ObjectB</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="_4-工厂模式" tabindex="-1"><a class="header-anchor" href="#_4-工厂模式" aria-hidden="true">#</a> 4. 工厂模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">//  工厂</span>\n<span class="token keyword">class</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>\n    <span class="token comment">//  产品类型</span>\n    <span class="token keyword">enum</span> <span class="token builtin">ProductType</span> <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token builtin">ProductA</span>\n        <span class="token keyword">case</span> <span class="token builtin">ProductB</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//  制造</span>\n    <span class="token keyword">func</span> <span class="token function">make</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token builtin">ProductType</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Product</span> <span class="token punctuation">{</span>\n        <span class="token keyword">switch</span> type <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token builtin">ProductA</span><span class="token punctuation">:</span>\n            <span class="token keyword">return</span> <span class="token function">ProductA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token builtin">ProductB</span><span class="token punctuation">:</span>\n            <span class="token keyword">return</span> <span class="token function">ProductB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  产品协议</span>\n<span class="token keyword">protocol</span> <span class="token builtin">Product</span> <span class="token punctuation">{</span>\n    <span class="token comment">//  产品说明书</span>\n    <span class="token keyword">func</span> <span class="token function">instructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  产品A</span>\n<span class="token keyword">class</span> <span class="token class-name">ProductA</span><span class="token punctuation">:</span> <span class="token builtin">Product</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">instructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;product A&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  产品B</span>\n<span class="token keyword">class</span> <span class="token class-name">ProductB</span><span class="token punctuation">:</span> <span class="token builtin">Product</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">instructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;product B&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> factory <span class="token operator">=</span> <span class="token function">Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nfactory<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token builtin">ProductA</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nfactory<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token builtin">ProductB</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="_5-装饰器模式" tabindex="-1"><a class="header-anchor" href="#_5-装饰器模式" aria-hidden="true">#</a> 5. 装饰器模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">//  礼物</span>\n<span class="token keyword">protocol</span> <span class="token builtin">Gift</span> <span class="token punctuation">{</span>\n    <span class="token comment">//  惊喜</span>\n    <span class="token keyword">func</span> <span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  玩具车</span>\n<span class="token keyword">class</span> <span class="token class-name">ToyCar</span><span class="token punctuation">:</span> <span class="token builtin">Gift</span> <span class="token punctuation">{</span>\n    <span class="token keyword">func</span> <span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;a toy car&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  装饰器</span>\n<span class="token keyword">class</span> <span class="token class-name">Decorator</span><span class="token punctuation">:</span> <span class="token builtin">Gift</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">var</span> decorated<span class="token punctuation">:</span> <span class="token builtin">Gift</span>\n    \n    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">_</span> gift<span class="token punctuation">:</span> <span class="token builtin">Gift</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        decorated <span class="token operator">=</span> gift\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">func</span> <span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        decorated<span class="token punctuation">.</span><span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//  礼物盒</span>\n<span class="token keyword">class</span> <span class="token class-name">GiftBox</span><span class="token punctuation">:</span> <span class="token builtin">Decorator</span> <span class="token punctuation">{</span>\n    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;decorated with a gift box&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">GiftBox</span><span class="token punctuation">(</span><span class="token function">ToyCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">surprise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="_6-迭代器模式" tabindex="-1"><a class="header-anchor" href="#_6-迭代器模式" aria-hidden="true">#</a> 6. 迭代器模式</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">protocol</span> _Sequence <span class="token punctuation">{</span>\n    associatedtype <span class="token builtin">Element</span>\n    associatedtype <span class="token builtin">Iterator</span>\n\n    <span class="token keyword">func</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token builtin">Iterator</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">protocol</span> _IteratorProtocal <span class="token punctuation">{</span>\n    associatedtype <span class="token builtin">Element</span>\n\n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token builtin">Element</span><span class="token operator">?</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">struct</span> _Array<span class="token operator">&lt;</span><span class="token builtin">Element</span><span class="token operator">&gt;</span><span class="token punctuation">:</span> _Sequence <span class="token punctuation">{</span>\n    <span class="token keyword">typealias</span> <span class="token builtin">Element</span> <span class="token operator">=</span> <span class="token builtin">Element</span>\n    <span class="token keyword">typealias</span> <span class="token builtin">Iterator</span> <span class="token operator">=</span> _Iterator<span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token operator">&gt;</span>\n\n    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Element</span><span class="token punctuation">]</span>\n\n    <span class="token keyword">func</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token builtin">Iterator</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> _Iterator<span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> value<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">struct</span> _Iterator<span class="token operator">&lt;</span><span class="token builtin">Elements</span><span class="token operator">&gt;</span><span class="token punctuation">:</span> _IteratorProtocal <span class="token keyword">where</span> <span class="token builtin">Elements</span><span class="token punctuation">:</span> _Sequence <span class="token punctuation">{</span>\n    <span class="token keyword">typealias</span> <span class="token builtin">Element</span> <span class="token operator">=</span> <span class="token builtin">Elements</span><span class="token punctuation">.</span><span class="token builtin">Element</span>\n\n    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">Element</span><span class="token punctuation">]</span>\n    <span class="token keyword">var</span> index<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">0</span>\n\n    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">Elements</span><span class="token punctuation">.</span><span class="token builtin">Element</span><span class="token operator">?</span> <span class="token punctuation">{</span>\n        <span class="token keyword">guard</span> index <span class="token operator">&lt;</span> value<span class="token punctuation">.</span><span class="token builtin">count</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token constant">nil</span> <span class="token punctuation">}</span>\n        <span class="token keyword">defer</span> <span class="token punctuation">{</span>\n            index <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> value<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n\n<span class="token keyword">var</span> iter <span class="token operator">=</span> _Array<span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">//var iter = _Array&lt;String&gt;(value: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]).makeIterator()</span>\n<span class="token keyword">while</span> <span class="token keyword">let</span> item <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div>',10),o={render:function(n,s){const a=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[(0,p.Wm)(a,{to:"/CS/DesignPatterns.html#_1-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F"},{default:(0,p.w5)((()=>[e])),_:1})]),c],64)}}}}]);
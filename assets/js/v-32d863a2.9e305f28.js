(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[9716],{8872:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-32d863a2",path:"/Swift/ReferenceManual/Statements.html",title:"语句",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"循环语句",slug:"循环语句",children:[{level:3,title:"For-In 循环",slug:"for-in-循环",children:[]},{level:3,title:"While 循环",slug:"while-循环",children:[]},{level:3,title:"Repeat-While 循环",slug:"repeat-while-循环",children:[]}]},{level:2,title:"分支语句",slug:"分支语句",children:[{level:3,title:"if 语句",slug:"if-语句",children:[]},{level:3,title:"guard 语句",slug:"guard-语句",children:[]},{level:3,title:"switch 语句",slug:"switch-语句",children:[]}]},{level:2,title:"带标签的语句",slug:"带标签的语句",children:[]},{level:2,title:"控制转移语句",slug:"控制转移语句",children:[]},{level:2,title:"defer 语句",slug:"defer-语句",children:[]},{level:2,title:"do 语句",slug:"do-语句",children:[]},{level:2,title:"编译器控制语句",slug:"编译器控制语句",children:[{level:3,title:"条件编译代码块",slug:"条件编译代码块",children:[]},{level:3,title:"行控制语句",slug:"行控制语句",children:[]},{level:3,title:"编译时诊断语句",slug:"编译时诊断语句",children:[]}]},{level:2,title:"可用性条件",slug:"可用性条件",children:[]}],filePathRelative:"Swift/ReferenceManual/Statements.md",git:{updatedTime:1642670075e3,contributors:[]}}},4610:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="语句" tabindex="-1"><a class="header-anchor" href="#语句" aria-hidden="true">#</a> 语句</h1><h2 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句" aria-hidden="true">#</a> 循环语句</h2><h3 id="for-in-循环" tabindex="-1"><a class="header-anchor" href="#for-in-循环" aria-hidden="true">#</a> For-In 循环</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">3</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="步长不为一或倒序" tabindex="-1"><a class="header-anchor" href="#步长不为一或倒序" aria-hidden="true">#</a> 步长不为一或倒序</h4><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">stride</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> by<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// 0 2 4 6 8</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="while-循环" tabindex="-1"><a class="header-anchor" href="#while-循环" aria-hidden="true">#</a> While 循环</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n    \n    i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="repeat-while-循环" tabindex="-1"><a class="header-anchor" href="#repeat-while-循环" aria-hidden="true">#</a> Repeat-While 循环</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// while第一次判断条件不满足直接不执行</span>\n<span class="token comment">// repeat while即使第一次判断条件不满足也会至少执行一次</span>\n<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">repeat</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n    \n    i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>\n<span class="token punctuation">}</span> <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="分支语句" tabindex="-1"><a class="header-anchor" href="#分支语句" aria-hidden="true">#</a> 分支语句</h2><h3 id="if-语句" tabindex="-1"><a class="header-anchor" href="#if-语句" aria-hidden="true">#</a> if 语句</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// 可选绑定</span>\n<span class="token keyword">if</span> <span class="token keyword">let</span> zero <span class="token operator">=</span> <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token builtin">Result</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">NSError</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token comment">// case 模式匹配</span>\n<span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token keyword">let</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> result <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">let</span> dualOption<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token operator">?</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token number">1</span>\n\n<span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token keyword">let</span> x<span class="token operator">?</span><span class="token operator">?</span> <span class="token operator">=</span> dualOption <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="guard-语句" tabindex="-1"><a class="header-anchor" href="#guard-语句" aria-hidden="true">#</a> guard 语句</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">guard</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">guard</span> <span class="token keyword">let</span> zero <span class="token operator">=</span> <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="switch-语句" tabindex="-1"><a class="header-anchor" href="#switch-语句" aria-hidden="true">#</a> switch 语句</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">switch</span> <span class="token builtin">UIDevice</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span>userInterfaceIdiom <span class="token punctuation">{</span>\n<span class="token keyword">case</span> <span class="token punctuation">.</span>mac<span class="token punctuation">:</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;mac&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">case</span> <span class="token punctuation">.</span>phone<span class="token punctuation">:</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">case</span> <span class="token punctuation">.</span>pad<span class="token punctuation">:</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;pad&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">default</span><span class="token punctuation">:</span>\n    <span class="token keyword">break</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;unknown&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// case let where 模式匹配替换if else</span>\n<span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">switch</span> string <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token keyword">let</span> string <span class="token keyword">where</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token keyword">let</span> string <span class="token keyword">where</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token keyword">let</span> string <span class="token keyword">where</span> string<span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;unknown&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="带标签的语句" tabindex="-1"><a class="header-anchor" href="#带标签的语句" aria-hidden="true">#</a> 带标签的语句</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>label<span class="token punctuation">:</span> <span class="token keyword">if</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>\n    <span class="token keyword">while</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>\n            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;inside&quot;</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span> label\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// break本应跳出while循环，break label指定了要跳出的标签，最终跳出了if语句</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;outside&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 将不会被执行</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="控制转移语句" tabindex="-1"><a class="header-anchor" href="#控制转移语句" aria-hidden="true">#</a> 控制转移语句</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">while</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>\n    <span class="token keyword">break</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token number">3</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token punctuation">{</span>\n        <span class="token keyword">continue</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// 1 2</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">makeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token function">NSError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="defer-语句" tabindex="-1"><a class="header-anchor" href="#defer-语句" aria-hidden="true">#</a> defer 语句</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> pointer <span class="token operator">=</span> <span class="token builtin">UnsafeMutablePointer</span><span class="token operator">&lt;</span><span class="token builtin">Int</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>capacity<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token comment">// defer 推迟到退出当前作用域之前执行</span>\n    <span class="token keyword">defer</span> <span class="token punctuation">{</span>\n        pointer<span class="token punctuation">.</span><span class="token function">deallocate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    \n    pointer<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="do-语句" tabindex="-1"><a class="header-anchor" href="#do-语句" aria-hidden="true">#</a> do 语句</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token function">String</span><span class="token punctuation">(</span>contentsOfFile<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token keyword">let</span> error <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment">// Error Domain=NSCocoaErrorDomain Code=258 &quot;The item couldn’t be opened because the file name “” is invalid.&quot; UserInfo={NSFilePath=}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">// 引入一个新的作用域，分隔代码块的界限，不会损失性能</span>\n<span class="token keyword">do</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="编译器控制语句" tabindex="-1"><a class="header-anchor" href="#编译器控制语句" aria-hidden="true">#</a> 编译器控制语句</h2><h3 id="条件编译代码块" tabindex="-1"><a class="header-anchor" href="#条件编译代码块" aria-hidden="true">#</a> 条件编译代码块</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">UIKit</span>\n#elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">AppKit</span>\n#elseif <span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">WatchKit</span>\n#elseif <span class="token function">os</span><span class="token punctuation">(</span><span class="token builtin">Linux</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span><span class="token builtin">Windows</span><span class="token punctuation">)</span>\n#<span class="token keyword">else</span>\n#endif\n\n#<span class="token keyword">if</span> <span class="token function">arch</span><span class="token punctuation">(</span>i386<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">arch</span><span class="token punctuation">(</span>x86_64<span class="token punctuation">)</span>\n#elseif <span class="token function">arch</span><span class="token punctuation">(</span>arm<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">arch</span><span class="token punctuation">(</span>arm64<span class="token punctuation">)</span>\n#endif\n\n#<span class="token keyword">if</span> <span class="token function">swift</span><span class="token punctuation">(</span><span class="token operator">&gt;=</span><span class="token number">5</span><span class="token punctuation">)</span>\n#endif\n\n#<span class="token keyword">if</span> <span class="token function">compiler</span><span class="token punctuation">(</span><span class="token operator">&gt;=</span><span class="token number">5</span><span class="token punctuation">)</span>\n#endif\n\n#<span class="token keyword">if</span> <span class="token function">canImport</span><span class="token punctuation">(</span><span class="token builtin">SwiftUI</span><span class="token punctuation">)</span>\n<span class="token keyword">import</span> <span class="token builtin">SwiftUI</span>\n#endif\n\n#<span class="token keyword">if</span> <span class="token function">targetEnvironment</span><span class="token punctuation">(</span>simulator<span class="token punctuation">)</span>\n#elseif <span class="token function">targetEnvironment</span><span class="token punctuation">(</span>macCatalyst<span class="token punctuation">)</span>\n#endif\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="行控制语句" tabindex="-1"><a class="header-anchor" href="#行控制语句" aria-hidden="true">#</a> 行控制语句</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#<span class="token function">sourceLocation</span><span class="token punctuation">(</span>file<span class="token punctuation">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>#file<span class="token punctuation">,</span> #line<span class="token punctuation">)</span> <span class="token comment">// name 2</span>\n\n#<span class="token function">sourceLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span>#file<span class="token punctuation">,</span> #line<span class="token punctuation">)</span> <span class="token comment">// 文件名和行号被重置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="编译时诊断语句" tabindex="-1"><a class="header-anchor" href="#编译时诊断语句" aria-hidden="true">#</a> 编译时诊断语句</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#<span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;错误&quot;</span><span class="token punctuation">)</span>\n\n#<span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;警告&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="可用性条件" tabindex="-1"><a class="header-anchor" href="#可用性条件" aria-hidden="true">#</a> 可用性条件</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">if</span> #<span class="token function">available</span><span class="token punctuation">(</span>iOS <span class="token number">13.0</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',39),e={render:function(n,s){return p}}}}]);